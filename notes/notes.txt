
Points I'm learning:
- Trying a different naming convention for simplicity and forcing myself to be
  flexible

- Solidifying my knowledge of rendering triangles using incremental changes
  derived from the math equations

- Debugging linear transformations in code using pencil and paper

- Doing research from class notes and online sources to improve my
  understanding of clipping.

- After reading, the problem of clipping became extremely simple once I broke
  it down into simpler problems to solve. Rather than trying to deal with
  corner cases in clipping, it was simpler to independently clip against 6
  planes for each triangle.

- Switched from using OpenGL to Windows for access to a frame buffer.

- Software rasterizer lets me inspect data about everything in the graphics pipeline. I
  can click on pixels and display why they aren't showing.

- I fixed a bug where there were pixels not being filled inside of triangles.
  This was due to an accumulation of floating point errors while trying to
  fill in the triangles incrementally.


5/24/2019
I began implementation of clipping. I'm implementing clipping in clip space
using homogeneous coordinates to make things simple and efficient. Today I was
able to clip the left side of a triangle by detecting collisions with the left
side of the frustum and generating geometry and topology information to draw
two triangles that are on screen.
